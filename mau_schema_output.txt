SQL> -- Student id: 30504457
SQL> -- Student Name: Tan Wen Zheng
SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
SQL> --   at:        2020-05-12 20:57:33 AEST
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE artist CASCADE CONSTRAINTS;

Table ARTIST dropped.

SQL> 
SQL> DROP TABLE artwork CASCADE CONSTRAINTS;

Table ARTWORK dropped.

SQL> 
SQL> DROP TABLE customer CASCADE CONSTRAINTS;

Table CUSTOMER dropped.

SQL> 
SQL> DROP TABLE exhibit CASCADE CONSTRAINTS;

Table EXHIBIT dropped.

SQL> 
SQL> DROP TABLE gallery CASCADE CONSTRAINTS;

Table GALLERY dropped.

SQL> 
SQL> DROP TABLE sale CASCADE CONSTRAINTS;

Table SALE dropped.

SQL> 
SQL> DROP TABLE status CASCADE CONSTRAINTS;

Table STATUS dropped.

SQL> 
SQL> DROP TABLE style CASCADE CONSTRAINTS;

Table STYLE dropped.

SQL> 
SQL> CREATE TABLE artist (
  2      artist_code     NUMBER(4) NOT NULL,
  3      artist_fname    VARCHAR2(30) NOT NULL,
  4      artist_lname    VARCHAR2(50) NOT NULL,
  5      artist_street   VARCHAR2(20) NOT NULL,
  6      artist_town     VARCHAR2(10) NOT NULL,
  7      artist_state    CHAR(3) NOT NULL,
  8      artist_tel_no   CHAR(10)
  9  );

Table ARTIST created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_code IS
  2      'Artist identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_fname IS
  2      'Artist first name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_lname IS
  2      'Artist last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_street IS
  2      'Artist street address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_town IS
  2      'Artist town address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_state IS
  2      'Artist state address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artist.artist_tel_no IS
  2      'Artist phone number';

Comment created.

SQL> 
SQL> ALTER TABLE artist ADD CONSTRAINT artist_pk PRIMARY KEY ( artist_code );

Table ARTIST altered.

SQL> 
SQL> CREATE TABLE artwork (
  2      artwork_no            NUMBER(2) NOT NULL,
  3      artist_code           NUMBER(4) NOT NULL,
  4      artwork_title         VARCHAR2(50) NOT NULL,
  5      artwork_date          DATE NOT NULL,
  6      media_name            VARCHAR2(24) NOT NULL,
  7      min_price             NUMBER(8) NOT NULL,
  8      date_added_to_stock   DATE,
  9      artwork_style_no      NUMBER(2) NOT NULL
 10  );

Table ARTWORK created.

SQL> 
SQL> COMMENT ON COLUMN artwork.artwork_no IS
  2      'Artwork identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.artist_code IS
  2      'Artist identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.artwork_title IS
  2      'Artwork title';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.artwork_date IS
  2      'Artwork date of work';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.media_name IS
  2      'Media name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.min_price IS
  2      'Minimum pricing';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.date_added_to_stock IS
  2      'Date added to stock';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN artwork.artwork_style_no IS
  2      'Artwork_style_no';

Comment created.

SQL> 
SQL> ALTER TABLE artwork ADD CONSTRAINT artwork_pk PRIMARY KEY ( artist_code,
  2                                                              artwork_no );

Table ARTWORK altered.

SQL> 
SQL> CREATE TABLE customer (
  2      cus_id          NUMBER(7) NOT NULL,
  3      cus_fname       VARCHAR2(50) NOT NULL,
  4      cus_lname       VARCHAR2(50) NOT NULL,
  5      business_name   VARCHAR2(50),
  6      cus_street      VARCHAR2(20) NOT NULL,
  7      cus_town        VARCHAR2(10) NOT NULL,
  8      cus_state       CHAR(3) NOT NULL,
  9      cus_tel_no      CHAR(10) NOT NULL
 10  );

Table CUSTOMER created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_id IS
  2      'Customer identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_fname IS
  2      'Customerfirst  name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_lname IS
  2      'Customer last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.business_name IS
  2      'Customer business name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_street IS
  2      'Customer street';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_town IS
  2      'Customer town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_state IS
  2      'Customer state';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cus_tel_no IS
  2      'Customer phone number';

Comment created.

SQL> 
SQL> ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cus_id );

Table CUSTOMER altered.

SQL> 
SQL> CREATE TABLE exhibit (
  2      exhibit_start   DATE NOT NULL,
  3      gal_id          NUMBER(2) NOT NULL,
  4      exhibit_end     DATE,
  5      feature         CHAR(1) DEFAULT 'Y' NOT NULL,
  6      artist_code     NUMBER(7) NOT NULL,
  7      artwork_no      NUMBER(2) NOT NULL,
  8      exhibit_no      NUMBER(4) NOT NULL
  9  );

Table EXHIBIT created.

SQL> 
SQL> ALTER TABLE exhibit
  2      ADD CONSTRAINT chk_featured CHECK ( feature IN (
  3          'N',
  4          'Y'
  5      ) );

Table EXHIBIT altered.

SQL> 
SQL> COMMENT ON COLUMN exhibit.exhibit_start IS
  2      'Exhibit start date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.gal_id IS
  2      'Gallery identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.exhibit_end IS
  2      'exhibit end date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.feature IS
  2      'Featured in catalog';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.artist_code IS
  2      'Artist identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.artwork_no IS
  2      'Artwork identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN exhibit.exhibit_no IS
  2      'Surrogate key exhibit identifier';

Comment created.

SQL> 
SQL> ALTER TABLE exhibit ADD CONSTRAINT exhibit_pk PRIMARY KEY ( exhibit_no );

Table EXHIBIT altered.

SQL> 
SQL> ALTER TABLE exhibit ADD CONSTRAINT nk_exhibit UNIQUE ( exhibit_start,
  2                                                         gal_id );

Table EXHIBIT altered.

SQL> 
SQL> CREATE TABLE gallery (
  2      gal_id          NUMBER(2) NOT NULL,
  3      gal_name        VARCHAR2(20) NOT NULL,
  4      manager_fname   VARCHAR2(20) NOT NULL,
  5      manager_lname   VARCHAR2(20) NOT NULL,
  6      gal_street      VARCHAR2(20) NOT NULL,
  7      gal_town        VARCHAR2(10) NOT NULL,
  8      gal_state       CHAR(3) NOT NULL,
  9      gal_tel_no      CHAR(10) NOT NULL,
 10      gal_open        VARCHAR2(4) NOT NULL,
 11      gal_close       VARCHAR2(4) NOT NULL
 12  );

Table GALLERY created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_id IS
  2      'Gallery identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_name IS
  2      'Gallery name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.manager_fname IS
  2      'Managerfirst  name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.manager_lname IS
  2      'Manager last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_street IS
  2      'Gallery street';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_town IS
  2      'Gallery town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_state IS
  2      'Gallery state';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_tel_no IS
  2      'Gallery phone number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_open IS
  2      'Gallery open time';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN gallery.gal_close IS
  2      'Gallery closing time';

Comment created.

SQL> 
SQL> ALTER TABLE gallery ADD CONSTRAINT gallery_pk PRIMARY KEY ( gal_id );

Table GALLERY altered.

SQL> 
SQL> CREATE TABLE sale (
  2      sale_id         NUMBER(7) NOT NULL,
  3      date_of_sale    DATE NOT NULL,
  4      sale_price      NUMBER(8, 2),
  5      cus_id          NUMBER(7) NOT NULL,
  6      artist_code     NUMBER(7) NOT NULL,
  7      artwork_no      NUMBER(2) NOT NULL,
  8      exhibit_start   DATE NOT NULL,
  9      gal_id          NUMBER(7) NOT NULL,
 10      exhibit_no      NUMBER(4) NOT NULL
 11  );

Table SALE created.

SQL> 
SQL> COMMENT ON COLUMN sale.sale_id IS
  2      'Sale identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.date_of_sale IS
  2      'Date of sale';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.sale_price IS
  2      'Sale price';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.cus_id IS
  2      'Customer identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.artist_code IS
  2      'Artist identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.artwork_no IS
  2      'Artwork identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.exhibit_start IS
  2      'Exhibit start date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.gal_id IS
  2      'Gallery identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN sale.exhibit_no IS
  2      'Surrogate key exhibit identifier';

Comment created.

SQL> 
SQL> CREATE UNIQUE INDEX sale__idx ON
  2      sale (
  3          artist_code
  4      ASC,
  5          artwork_no
  6      ASC );

INDEX SALE__IDX created.

SQL> 
SQL> CREATE UNIQUE INDEX sale__idxv1 ON
  2      sale (
  3          exhibit_start
  4      ASC,
  5          gal_id
  6      ASC );

INDEX SALE__IDXV1 created.

SQL> 
SQL> CREATE UNIQUE INDEX sale__idx ON
  2      sale (
  3          exhibit_no
  4      ASC );

Error starting at line : 277 in command -
CREATE UNIQUE INDEX sale__idx ON
    sale (
        exhibit_no
    ASC )
Error report -
ORA-00955: name is already used by an existing object
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> 
SQL> ALTER TABLE sale ADD CONSTRAINT sale_pk PRIMARY KEY ( sale_id );

Table SALE altered.

SQL> 
SQL> CREATE TABLE status (
  2      artwork_status_date   DATE NOT NULL,
  3      artist_code           NUMBER(7) NOT NULL,
  4      artwork_no            NUMBER(2) NOT NULL,
  5      artwork_status        CHAR(1) DEFAULT 'S' NOT NULL,
  6      gal_id                NUMBER(2),
  7      status_id             NUMBER(7) NOT NULL
  8  );

Table STATUS created.

SQL> 
SQL> ALTER TABLE status
  2      ADD CONSTRAINT chk_status_type CHECK ( artwork_status IN (
  3          'D',
  4          'I',
  5          'R',
  6          'S',
  7          'T'
  8      ) );

Table STATUS altered.

SQL> 
SQL> COMMENT ON COLUMN status.artwork_status_date IS
  2      'artwork status date';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN status.artist_code IS
  2      'Artist identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN status.artwork_no IS
  2      'Artwork identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN status.artwork_status IS
  2      'Artwork status';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN status.gal_id IS
  2      'Gallery identifier';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN status.status_id IS
  2      'Surrogate key of status';

Comment created.

SQL> 
SQL> ALTER TABLE status ADD CONSTRAINT status_pk PRIMARY KEY ( status_id );

Table STATUS altered.

SQL> 
SQL> ALTER TABLE status
  2      ADD CONSTRAINT nk_status UNIQUE ( artwork_status_date,
  3                                        artist_code,
  4                                        artwork_no );

Table STATUS altered.

SQL> 
SQL> CREATE TABLE style (
  2      artwork_style_no       NUMBER(3) NOT NULL,
  3      artwork_style          VARCHAR2(20) NOT NULL,
  4      artwork_parent_style   VARCHAR2(20)
  5  );

Table STYLE created.

SQL> 
SQL> COMMENT ON COLUMN style.artwork_style_no IS
  2      'Artwork_style_no';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN style.artwork_style IS
  2      'Artwork style';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN style.artwork_parent_style IS
  2      'Artwork_parent_style';

Comment created.

SQL> 
SQL> ALTER TABLE style ADD CONSTRAINT style_pk PRIMARY KEY ( artwork_style_no );

Table STYLE altered.

SQL> 
SQL> ALTER TABLE style ADD CONSTRAINT nk_style UNIQUE ( artwork_style );

Table STYLE altered.

SQL> 
SQL> ALTER TABLE artwork
  2      ADD CONSTRAINT artist_artwork FOREIGN KEY ( artist_code )
  3          REFERENCES artist ( artist_code );

Table ARTWORK altered.

SQL> 
SQL> ALTER TABLE exhibit
  2      ADD CONSTRAINT artwork_display FOREIGN KEY ( artist_code,
  3                                                   artwork_no )
  4          REFERENCES artwork ( artist_code,
  5                               artwork_no );

Table EXHIBIT altered.

SQL> 
SQL> ALTER TABLE sale
  2      ADD CONSTRAINT artwork_sold FOREIGN KEY ( artist_code,
  3                                                artwork_no )
  4          REFERENCES artwork ( artist_code,
  5                               artwork_no );

Table SALE altered.

SQL> 
SQL> ALTER TABLE status
  2      ADD CONSTRAINT artwork_status FOREIGN KEY ( artist_code,
  3                                                  artwork_no )
  4          REFERENCES artwork ( artist_code,
  5                               artwork_no );

Table STATUS altered.

SQL> 
SQL> ALTER TABLE artwork
  2      ADD CONSTRAINT artwork_style FOREIGN KEY ( artwork_style_no )
  3          REFERENCES style ( artwork_style_no );

Table ARTWORK altered.

SQL> 
SQL> ALTER TABLE sale
  2      ADD CONSTRAINT exhibition_sale FOREIGN KEY ( exhibit_no )
  3          REFERENCES exhibit ( exhibit_no );

Table SALE altered.

SQL> 
SQL> ALTER TABLE exhibit
  2      ADD CONSTRAINT gallery_display FOREIGN KEY ( gal_id )
  3          REFERENCES gallery ( gal_id );

Table EXHIBIT altered.

SQL> 
SQL> ALTER TABLE status
  2      ADD CONSTRAINT gallery_status FOREIGN KEY ( gal_id )
  3          REFERENCES gallery ( gal_id );

Table STATUS altered.

SQL> 
SQL> ALTER TABLE sale
  2      ADD CONSTRAINT sales_to_customer FOREIGN KEY ( cus_id )
  3          REFERENCES customer ( cus_id );

Table SALE altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                             8
SQL> -- CREATE INDEX                             3
SQL> -- ALTER TABLE                             22
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> spool off;
